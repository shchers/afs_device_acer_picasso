import init.picasso.usb.rc

on early-init
    mount debugfs debugfs /sys/kernel/debug

    # for backwards compatibility
    export EXTERNAL_STORAGE /storage/sdcard0
    mkdir /storage 0050 system sdcard_r
    mkdir /storage/sdcard0 0000 system system
    symlink /storage/sdcard0 /sdcard
    symlink /storage/sdcard0 /mnt/sdcard

    export SECONDARY_STORAGE /mnt/external_sd
    export SECOND_VOLUME_STORAGE /mnt/external_sd
    mkdir /mnt/external_sd 0000 system system

    export THIRD_VOLUME_STORAGE /mnt/usb_storage
    mkdir /mnt/usb_storage 0000 system system

    # create directory for mounting usb drives
    # mkdir /mnt/usbdrive 0666 system system
    # symlink /mnt/usbdrive /usbdrive

on fs
    mount ext4 /dev/block/mmcblk0p3 /system wait ro
    setprop ro.crypto.tmpfs_options size=128m,mode=0771,uid=1000,gid=1000
    mount ext4 /dev/block/mmcblk0p8 /data wait noatime nosuid nodev
    mount ext4 /dev/block/mmcblk0p4 /cache wait noatime nosuid nodev
# Mounting of this partition disabled, because it doesn't contain any important
# information only trial version of "popular" games
#    mount ext4 /dev/block/mmcblk0p6 /system/vendor wait ro

on post-fs-data
    mkdir /data/misc/wifi 0770 wifi wifi
    mkdir /data/misc/wifi/sockets 0770 wifi wifi
    mkdir /data/misc/dhcp 0770 dhcp dhcp
    chown dhcp dhcp /data/misc/dhcp

    # we will remap this as /mnt/sdcard with the sdcard fuse tool
    mkdir /data/media 0775 media_rw media_rw
    chown media_rw media_rw /data/media

    # Set indication (checked by vold) that we have finished this action
    setprop vold.post_fs_data_done 1

    # Insert NTFS filesystem driver
    insmod system/lib/modules/ufsd.ko

on boot
# bluetooth
    # UART device
    chmod 0660 /dev/ttyHS2
    chown bluetooth bluetooth /dev/ttyHS2
    # power up/down interface
    chmod 0660 /sys/class/rfkill/rfkill0/state
    chmod 0660 /sys/class/rfkill/rfkill0/type
    chown bluetooth bluetooth /sys/class/rfkill/rfkill0/state
    chown bluetooth bluetooth /sys/class/rfkill/rfkill0/type

    # bluetooth MAC address programming
    chown bluetooth bluetooth ro.bt.bdaddr_path
    chown bluetooth bluetooth /system/etc/bluetooth
    setprop ro.bt.bdaddr_path /sys/EcControl/BTMAC

# backlight
    chown system system /sys/class/backlight/pwm-backlight/brightness

# Touch
    chmod 664 /sys/Touch/sensitivity
    chmod 664 /sys/Touch/filter
    chown system system /sys/Touch/sensitivity
    chown system system /sys/Touch/filter

# Sensor
    chmod 666 /dev/nvhost-ctrl
    chmod 666 /dev/nvhost-display
    chmod 666 /dev/nvhost-dsi
    chmod 666 /dev/nvhost-gr2d
    chmod 666 /dev/nvhost-gr3d
    chmod 666 /dev/nvhost-isp
    chmod 666 /dev/nvhost-mpe
    chmod 666 /dev/nvhost-vi
    chmod 664 /sys/bus/iio/devices/device0/lux
    chmod 664 /sys/bus/iio/devices/device0/proxim_ir


# Power management settings
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq 216000
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq 1000000
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor interactive
    write /sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq 216000
    write /sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq 1000000
    write /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor interactive
    write /sys/devices/system/cpu/cpufreq/interactive/go_maxspeed_load 80
    write /sys/module/cpuidle/parameters/lp2_in_idle 0

# make binder state/stats readable by root only, so that they are not
# captured by default in bugreports
    chmod 0400 /sys/kernel/debug/binder/stats
    chmod 0400 /sys/kernel/debug/binder/state

# WIFI SKU GPS (BCM)
on property:ro.dinfo.radio=Wifi
    write /sys/class/gpio/export 203
    write /sys/class/gpio/gpio203/value 0
    write /sys/class/gpio/gpio203/direction out


# FOR Ericsson GPS
on property:ro.dinfo.radio=3G
    chmod 666 /dev/bus/usb/002/049
    chown root root /dev/bus/usb/002/049


service wpa_supplicant /system/bin/wpa_supplicant \
    -Dwext -iwlan0 -c/data/misc/wifi/wpa_supplicant.conf
#   we will start as root and wpa_supplicant will switch to user wifi
#   after setting up the capabilities required for WEXT
#   user wifi
#   group wifi inet keystore
    class main
    socket wpa_wlan0 dgram 660 wifi wifi
    disabled
    oneshot

service dhcpcd_wlan0 /system/bin/dhcpcd -BK
    class main
    disabled
    oneshot

service dhcpcd_p2p /system/bin/dhcpcd -aABKL
    class main
    disabled
    oneshot

service iprenew_wlan0 /system/bin/dhcpcd -n
    class main
    disabled
    oneshot

service iprenew_p2p /system/bin/dhcpcd -n
    class main
    disabled
    oneshot

# create virtual SD card at /mnt/sdcard, based on the /data/media directory
# deamon will drop to user/group system/media_rw after initializing
# underlying files in /data/media wil be created with user and group media_rw (1023)
service sdcard /system/bin/sdcard /data/media 1023 1023
    class late_start

#BCM
service hciattach /system/bin/brcm_patchram_plus --enable_hci \
    --baudrate 3000000 --patchram /etc/firmware/bcm4329.hcd \
    --enable_lpm /dev/ttyHS2
    class main
    user bluetooth
    group bluetooth net_bt_admin
    disabled

# Start GPS daemon
service gps-daemon /system/bin/glgps_nvidiaTegra2android -c /system/etc/gps/gpsconfig.xml
    class late_start
    user root
    group root

# Mount usb drives as /usbdrive. Generally usb drives are formatted with FAT
# filesystem, so we support FAT as of now.
# on device-added-/sys/block/sda
#     mount vfat /dev/block/sda /mnt/usbdrive

# on device-removed-/sys/block/sda
#     umount /mnt/usbdrive

#Prepare TF service
service tf_daemon /system/bin/tf_daemon -storageDir /data/tf
    disabled
    class main
    user root
    group shell
    oneshot

#Create data directory and start service
on property:tf.enable=y
    mkdir /data/tf
    start tf_daemon

# Discretix DRM engine
service dx_drm_server /system/bin/DxDrmServerIpc -f -o allow_other /data/DxDrm/fuse
    user media
    group system
    onrestart chown media system /dev/fuse
    onrestart chmod 660 /dev/fuse
    disabled

on property:drm.playready.enable-dx=true
    mkdir /data/DxDrm
    mkdir /data/DxDrm/fuse
    mkdir /data/DxDrm/Credentials
    mkdir /data/DxDrm/Credentials/PlayReady

    symlink /system/etc/DxDrmConfig_Server.txt /data/DxDrm/DxDrmConfig_Server.txt
    symlink /system/etc/DxDrmConfig.txt /data/DxDrm/DxDrmConfig.txt
    symlink /system/etc/DxPrdyProvisionObf.pkg /data/DxDrm/Credentials/PlayReady/DxPrdyProvisionObf.pkg

    # We should enable access to IPC service to mounting point when not running as root.
    chmod 777 /data/DxDrm/fuse

    # We want to enable all the processes to be able to add the trace and log files
    chmod 777 /data/DxDrm
    mkdir /sdcard/download
    start dx_drm_server

# Acer log service
service acer_log /system/bin/alog
    user root
    group system
    oneshot

on property:persist.service.alog.enable=1
    start acer_log

on property:persist.service.alog.enable=0
    stop acer_log

# Postboot service
service postboot /system/bin/sh /postboot.sh
    user root
    oneshot

on property:init.svc.bootanim=stopped
    start postboot

#Start Docking daemon
service dockin_detect /system/bin/dock_detect_daemon
    class late_start
    user root

# cmd_server service
service cmd_server /system/bin/cmd_server_daemon
    class late_start
    user root

# Enable tcpdump-service
service netdump-service /system/xbin/tcpdump -i any -C 5 -p -s 0 -w /sdcard/netdump.cap -Z root
    user root
    disabled

on property:net.netdump.enable=1
    start netdump-service

on property:net.netdump.enable=0
    stop netdump-service
